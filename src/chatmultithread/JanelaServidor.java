package chatmultithread;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;
import java.util.List;

/**
 *
 * @author Prof. Dr. David Buzatto
 */
public class JanelaServidor extends javax.swing.JFrame {

    private boolean executando;
    
    private int porta;
    private ServerSocket serverSocket;
    
    private List<Socket> clientes;
    private List<BufferedReader> readers;
    private List<PrintWriter> writers;
    
    /**
     * Creates new form JanelaServidor
     */
    public JanelaServidor( int porta ) {
        
        initComponents();
        
        this.porta = porta;
        this.clientes = new ArrayList<>();
        this.readers = new ArrayList<>();
        this.writers = new ArrayList<>();
        
        try {
            iniciar();
        } catch ( IOException exc ) {
            exc.printStackTrace();
        }
        
    }
    
    private void iniciar() throws IOException {
        
        if ( !executando ) {
            
            serverSocket = new ServerSocket( porta );
            executando = true;
            
            // thread de conexÃ£o
            new Thread( () -> {
                while ( executando ) {
                    try {
                        Socket cliente = serverSocket.accept();
                        clientes.add( cliente );
                        BufferedReader reader = new BufferedReader( new InputStreamReader( cliente.getInputStream() ) );
                        readers.add( reader );
                        PrintWriter writer = new PrintWriter( cliente.getOutputStream() );
                        writers.add( writer );
                    } catch ( IOException exc ) {
                        exc.printStackTrace();
                    }
                }
            }).start();
            
            // thread de dados
            new Thread( () -> {
                while ( executando ) {
                    try {
                        lblClientesConectados.setText( "Clientes conectados: " + String.valueOf( readers.size() ) );
                        for ( int i = 0; i < clientes.size(); i++ ) {
                            Socket cliente = clientes.get( i );
                            BufferedReader reader = readers.get( i );
                            if ( cliente.isConnected() ) {
                                try {
                                    while ( reader.ready() ) {
                                        String dados = reader.readLine() + "\n";
                                        areaMensagens.append( dados );
                                        for ( PrintWriter writer : writers ) {
                                            writer.write( dados );
                                            writer.flush();
                                        }
                                    }
                                } catch ( IOException exc ) {
                                    exc.printStackTrace();
                                }
                            }
                        }
                        Thread.sleep( 15 );
                    } catch ( InterruptedException exc ) {
                        exc.printStackTrace();
                    }
                }
            }).start();
            
        }
    }
    
    public void parar() throws IOException {
        if ( executando ) {
            serverSocket.close();
            executando = false;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblClientesConectados = new javax.swing.JLabel();
        scrollPaneMensagens = new javax.swing.JScrollPane();
        areaMensagens = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Servidor");

        lblClientesConectados.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lblClientesConectados.setText("Clientes conectados:");

        areaMensagens.setEditable(false);
        areaMensagens.setColumns(20);
        areaMensagens.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        areaMensagens.setRows(5);
        scrollPaneMensagens.setViewportView(areaMensagens);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblClientesConectados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(scrollPaneMensagens, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblClientesConectados, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scrollPaneMensagens, javax.swing.GroupLayout.DEFAULT_SIZE, 356, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public static void main( String[] args ) {
        new JanelaServidor( 8080 ).setVisible( true );
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaMensagens;
    private javax.swing.JLabel lblClientesConectados;
    private javax.swing.JScrollPane scrollPaneMensagens;
    // End of variables declaration//GEN-END:variables
}
